{"version":3,"sources":["hooks/useWallet/useWallet.ts","config/config.ts","components/Box/Box.tsx","providers/WalletProvider/connectorsPromises.ts","utils/metamask.ts","utils/wait.ts","providers/WalletProvider/WalletProvider.tsx","hooks/usePrev/usePrev.ts","icons/Close.tsx","hooks/useToast/useToast.tsx","components/Modal/Modal.tsx","hooks/useToogle/useToggle.ts","hooks/window/index.ts","components/ModalConnect/ModalConnect.tsx","providers/AppProvider/index.tsx","theme/index.ts","Main.tsx","stores/app/app.ts","hooks/useDebounceValue/useDebounceValue.ts","App.tsx","hooks/app/index.ts","reportWebVitals.ts","index.tsx","components/Box/index.tsx"],"names":["useWallet","React","useContext","WalletContext","connectCore","connect","others","connector","connectType","chainId","chain","bep","erc","polygon","config","BSC_RPC_URL","process","POLYGON_RPC_URL","AVAX_RPC_URL","OGOERLI_RPC_URL","OPTIMISM_RPC_URL","PANCAKE_ROUTER","QUICK_SWAP_ROUTER","TRADER_JOE_ROUTER","DETH_SWAP_ROUTER","DETH_SWAP_MAINNET_ROUTER","PANCAKE_CODE_HASH","QUICK_SWAP_CODE_HASH","TRADER_JOE_CODE_HASH","DETH_SWAP_CODE_HASH","DETH_SWAP_MAINNET_CODE_HASH","PUBLIC_URL","localStorageKey","lastWallet","lastChainId","transactionSetting","parseInt","avax","ogoerli","optimism","isNaN","etherMethods","swapETHForExactTokens","swapExactETHForTokens","swapExactETHForTokensSupportingFeeOnTransferTokens","swapExactTokensForETH","swapExactTokensForETHSupportingFeeOnTransferTokens","swapTokensForExactETH","Box","BoxCore","injected","Promise","resolve","then","all","InjectedConnector","supportedChainIds","bsc","BscConnector","isMetamask","window","ethereum","isMetaMask","addChainBSC","a","provider","request","method","params","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","addChainMatic","addChainAvax","wait","time","setTimeout","createContext","setupNetwork","console","error","WalletProvider","props","children","toast","useToast","useState","balance","setBalance","etherSymbol","setEtherSymbol","undefined","rawBalance","setRawBalance","setName","setError","status","setStatus","setProvider","context","useWeb3React","prevStatus","value","ref","useRef","useEffect","current","usePrev","deactivate","activate","library","providerError","account","getBalance","decimalNumber","Decimal","formatEther","toFixed","ethers","providers","Web3Provider","JsonRpcProvider","reset","useCallback","close","connectorName","localStorage","setItem","UnsupportedChainIdError","hasSetup","description","removeItem","cb","setInterval","clearInterval","getItem","catch","e","Provider","ether","Close","xmlns","height","viewBox","width","fill","fillRule","clipRule","d","options","op","useMemo","position","useToastCore","Modal","isOpen","onClose","modalContentProps","modalContainerProps","zIndex","bg","mt","boxShadow","maxWidth","mx","containerProps","useToggle","defaultState","active","setIsActive","setActive","setInActive","toggle","state","toggleCallback","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","addEventListener","removeEventListener","networks","icon","wallets","ModalConnect","onConnect","currentChainId","selectedChainId","setSelectChainId","borderTopLeftRadius","borderTopRightRadius","px","as","minHeight","display","alignItems","fontSize","lineHeight","color","fontWeight","onClick","ml","borderBottomRightRadius","borderBottomLeftRadius","textAlign","xl","base","flexWrap","justifyContent","map","w","border","py","outline","alt","src","h","AppContext","AppProvider","toggleConnect","wallet","isOpenConnect","toggleOpenConnect","t","theme","extendTheme","styles","global","body","fontFamily","bgSize","colors","primary","accent","zIndices","hide","auto","docked","dropdown","sticky","banner","overlay","modal","popover","skipLink","tooltip","Home","loadable","MainLayout","Main","path","exact","useAppStore","create","set","blockNumber","setBlockNumber","block","selectBlockUpdater","useDebounceValue","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","getLibrary","pollingInterval","Updater","windowVisible","setState","updateBlock","debouncedState","blockNumberCallback","getBlockNumber","on","removeListener","useAutoUpdateBlockNumber","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a74804b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { WalletContext, WalletStatus } from \"../../providers/WalletProvider\";\nimport { chain } from \"../../config\";\nimport { BigNumber } from \"ethers\";\n\nexport interface UseWalletReturn {\n  account: string | null | undefined;\n  library: Web3Provider | undefined;\n  balance: string;\n  chainId: number;\n  reset: () => void;\n  error: any;\n  connect: (\n    connector: string,\n    connectType?: \"erc\" | \"bep\" | \"polygon\"\n  ) => Promise<void>;\n  status: WalletStatus;\n  providerError: Error | undefined;\n  ether: Web3Provider | undefined;\n  rawBalance: BigNumber | undefined;\n  etherSymbol: string;\n}\n\nfunction useWallet() {\n  const { connect: connectCore, ...others } = React.useContext(WalletContext);\n\n  const connect: (\n    connector: any,\n    connectType: string | number\n  ) => Promise<void> = (connector: any, connectType) => {\n    let chainId: number;\n\n    if (typeof connectType === \"string\") {\n      chainId = chain.bep;\n      if (connectType === \"erc\") {\n        chainId = chain.erc;\n      }\n      if (connectType === \"polygon\") {\n        chainId = chain.polygon;\n      }\n    } else {\n      chainId = connectType;\n    }\n\n    return connectCore(connector, chainId);\n  };\n\n  return {\n    ...others,\n    connect: connect,\n  };\n}\n\nexport default useWallet;\n","import { EtherMethods } from \"custom-uniswap-v2-sdk\";\n\nexport interface Config {\n  BSC_RPC_URL: string;\n  POLYGON_RPC_URL: string;\n  AVAX_RPC_URL: string;\n  OGOERLI_RPC_URL: string;\n  OPTIMISM_RPC_URL: string;\n\n  PANCAKE_ROUTER: string;\n  QUICK_SWAP_ROUTER: string;\n  TRADER_JOE_ROUTER: string;\n  DETH_SWAP_ROUTER: string;\n  DETH_SWAP_MAINNET_ROUTER: string;\n\n  PANCAKE_CODE_HASH: string;\n  QUICK_SWAP_CODE_HASH: string;\n  TRADER_JOE_CODE_HASH: string;\n  DETH_SWAP_CODE_HASH: string;\n  DETH_SWAP_MAINNET_CODE_HASH: string;\n  PUBLIC_URL: string;\n}\n\nconst config: Config = {\n  BSC_RPC_URL: process.env.REACT_APP_BSC_RPC_URL as string,\n  POLYGON_RPC_URL: process.env.POLYGON_RPC_URL as string,\n  AVAX_RPC_URL: process.env.REACT_APP_AVAX_RPC_URL as string,\n  OGOERLI_RPC_URL: process.env.REACT_APP_OGOERLI_RPC_URL as string,\n  OPTIMISM_RPC_URL: process.env.REACT_APP_OPTIMISM_RPC_URL as string,\n\n  PANCAKE_ROUTER: \"0x10ED43C718714eb63d5aA57B78B54704E256024E\",\n  QUICK_SWAP_ROUTER: \"0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff\",\n  TRADER_JOE_ROUTER: \"0x60aE616a2155Ee3d9A68541Ba4544862310933d4\",\n  DETH_SWAP_ROUTER: \"0x1C232F01118CB8B424793ae03F870aa7D0ac7f77\",\n  DETH_SWAP_MAINNET_ROUTER: \"0xE6Df0BB08e5A97b40B21950a0A51b94c4DbA0Ff6\",\n\n  PANCAKE_CODE_HASH:\n    \"0x00fb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5\",\n  QUICK_SWAP_CODE_HASH:\n    \"0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\",\n  TRADER_JOE_CODE_HASH:\n    \"0x0bbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91\",\n  DETH_SWAP_CODE_HASH:\n    \"0x5fb4d2ee093edb2e66bbe1a947e831a783d59c4ae498563976a61f3ef610c3ee\",\n  DETH_SWAP_MAINNET_CODE_HASH:\n    \"0x1a76b7e7272f6187014e23f04d1b2e543eed2fd1f76481149008cc6eacb05c22\",\n\n  PUBLIC_URL: process.env.PUBLIC_URL + \"/\" || \"/\",\n};\n\nconst localStorageKey = {\n  lastWallet: \"lastWallet\",\n  lastChainId: \"lastChainId\",\n  transactionSetting: \"transactionSetting\",\n};\n\nconst erc = parseInt(process.env.REACT_APP_ERC_CHAIN || \"1\", 10);\nconst bep = parseInt(process.env.REACT_APP_BEP_CHAIN || \"56\", 10);\nconst polygon = parseInt(process.env.REACT_APP_POLYGON_CHAIN || \"137\", 10);\nconst avax = parseInt(process.env.REACT_APP_AVAX_RPC_URL || \"43114\", 10);\nconst ogoerli = parseInt(process.env.REACT_APP_OGOERLI_RPC_URL || \"420\", 10);\nconst optimism = parseInt(process.env.REACT_APP_OPTIMISM_RPC_URL || \"10\", 10);\n\nconst chain = {\n  erc: isNaN(erc) ? 1 : erc,\n  bep: isNaN(bep) ? 56 : bep,\n  polygon: isNaN(polygon) ? 137 : polygon,\n  avax: isNaN(avax) ? 43114 : avax,\n  ogoerli: isNaN(ogoerli) ? 420 : ogoerli,\n  optimism: isNaN(optimism) ? 10 : optimism,\n};\n\nconst etherMethods: { [key: string]: EtherMethods } = {\n  [chain.avax]: {\n    swapETHForExactTokens: \"swapAVAXForExactTokens\",\n    swapExactETHForTokens: \"swapExactAVAXForTokens\",\n    swapExactETHForTokensSupportingFeeOnTransferTokens:\n      \"swapExactAVAXForTokensSupportingFeeOnTransferTokens\",\n    swapExactTokensForETH: \"swapExactTokensForAVAX\",\n    swapExactTokensForETHSupportingFeeOnTransferTokens:\n      \"swapExactTokensForAVAXSupportingFeeOnTransferTokens\",\n    swapTokensForExactETH: \"swapTokensForExactAVAX\",\n  },\n};\n\nexport { config, localStorageKey, chain, etherMethods };\n","import { Box as BoxCore, BoxProps as BoxCoreProps } from \"@chakra-ui/layout\";\nexport type BoxProps = BoxCoreProps;\nexport const Box = BoxCore;\n\nexport default Box;\n","import { AbstractConnector } from \"@web3-react/abstract-connector\";\n\nexport const injected: (chainId: number) => Promise<AbstractConnector> = (\n  chainId\n) => {\n  return new Promise((resolve) => {\n    import(\"@web3-react/injected-connector\").then((all) => {\n      const connector = new all.InjectedConnector({\n        supportedChainIds: [chainId],\n      });\n      resolve(connector);\n    });\n  });\n};\n\nexport const bsc: (chainId: number) => Promise<AbstractConnector> = (\n  chainId\n) => {\n  return new Promise((resolve) => {\n    import(\"@binance-chain/bsc-connector\").then((all) => {\n      const connector = new all.BscConnector({ supportedChainIds: [chainId] });\n      resolve(connector);\n    });\n  });\n};\n","import { chain } from \"../config\";\n\nexport function isMetamask(): boolean {\n  return (window as any).ethereum && (window as any).ethereum.isMetaMask;\n}\n\nexport function getMetamaskChain() {\n  if (isMetamask()) {\n    return parseInt((window as any).ethereum.chainId);\n  }\n  return -1;\n}\n\nexport async function addChainBSC() {\n  const provider = (window as any).ethereum;\n  await provider.request({\n    method: \"wallet_addEthereumChain\",\n    params: [\n      {\n        chainId: `0x${chain.bep.toString(16)}`,\n        chainName: \"Binance Smart Chain Mainnet\",\n        nativeCurrency: {\n          name: \"BNB\",\n          symbol: \"bnb\",\n          decimals: 18,\n        },\n        rpcUrls: [\"https://bsc-dataseed.binance.org\"],\n        blockExplorerUrls: [\"https://bscscan.com/\"],\n      },\n    ],\n  });\n}\n\nexport async function addChainMatic() {\n  const provider = (window as any).ethereum;\n  await provider.request({\n    method: \"wallet_addEthereumChain\",\n    params: [\n      {\n        chainId: `0x${chain.polygon.toString(16)}`,\n        chainName: \"Polygon POS\",\n        nativeCurrency: {\n          name: \"MATIC\",\n          symbol: \"MATIC\",\n          decimals: 18,\n        },\n        rpcUrls: [\"https://polygon-rpc.com\"],\n        blockExplorerUrls: [\"https://polygonscan.com\"],\n      },\n    ],\n  });\n}\n\nexport async function addChainAvax() {\n  const provider = (window as any).ethereum;\n  await provider.request({\n    method: \"wallet_addEthereumChain\",\n    params: [\n      {\n        chainId: `0x${chain.avax.toString(16)}`,\n        chainName: \"Avalanche Network\",\n        nativeCurrency: {\n          name: \"Avalanche\",\n          symbol: \"AVAX\",\n          decimals: 18,\n        },\n        rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\n        blockExplorerUrls: [\"https://snowtrace.io\"],\n      },\n    ],\n  });\n}\n","export function wait(time: number) {\n  return new Promise<void>((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n}\n","import React from \"react\";\nimport Decimal from \"decimal.js\";\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\nimport { Web3Provider, JsonRpcProvider } from \"@ethersproject/providers\";\nimport { bsc, injected } from \"./connectorsPromises\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { BigNumber, ethers } from \"ethers\";\nimport { chain, config, localStorageKey } from \"../../config\";\nimport {\n  addChainAvax,\n  addChainBSC,\n  addChainMatic,\n  getMetamaskChain,\n  isMetamask,\n} from \"../../utils/metamask\";\nimport { wait } from \"../../utils/wait\";\nimport usePrev from \"../../hooks/usePrev\";\nimport useToast from \"../../hooks/useToast\";\n\nexport type WalletStatus = \"connected\" | \"connecting\" | \"disconnected\";\n\nexport interface WalletContextValue {\n  name: string;\n  account: string | null | undefined;\n  balance: string;\n  chainId: number;\n  reset: () => void;\n  connect: (connectorName: string, chain: number) => Promise<void>;\n  error: any;\n  status: WalletStatus;\n  library: Web3Provider | undefined;\n  providerError: Error | undefined;\n  ether: Web3Provider | JsonRpcProvider | undefined;\n  rawBalance?: BigNumber;\n  etherSymbol: string;\n}\n\nexport const WalletContext = React.createContext<WalletContextValue>({} as any);\n\nexport const setupNetwork = async (chainId: number) => {\n  const provider = (window as any).ethereum;\n  if (provider && isMetamask()) {\n    try {\n      switch (chainId) {\n        case chain.bep: {\n          await addChainBSC();\n          return true;\n        }\n        case chain.polygon: {\n          await addChainMatic();\n          return true;\n        }\n        case chain.avax: {\n          await addChainAvax();\n          return true;\n        }\n      }\n      return false;\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n      return false;\n    }\n  } else {\n    // eslint-disable-next-line no-console\n    console.error(\n      `Can't setup the network id ${chainId} on metamask because window.ethereum is undefined`\n    );\n    return false;\n  }\n};\n\nfunction WalletProvider(props: { children?: React.ReactNode }) {\n  const { children } = props;\n\n  const toast = useToast();\n\n  const [balance, setBalance] = React.useState(\"\");\n\n  const [etherSymbol, setEtherSymbol] = React.useState(\"\");\n\n  const [rawBalance, setRawBalance] = React.useState<BigNumber | undefined>(\n    undefined\n  );\n\n  const [name, setName] = React.useState(\"\");\n\n  const [error, setError] = React.useState<any>(null);\n\n  const [status, setStatus] = React.useState<WalletStatus>(\"disconnected\");\n\n  const [provider, setProvider] = React.useState<\n    Web3Provider | JsonRpcProvider | undefined\n  >();\n\n  const context = useWeb3React<Web3Provider>();\n\n  const prevStatus = usePrev(status);\n\n  const {\n    chainId = chain.bep,\n    connector,\n    deactivate,\n    activate,\n    library,\n    error: providerError,\n    account,\n  } = context;\n\n  React.useEffect(() => {\n    switch (chainId) {\n      case chain.bep: {\n        setEtherSymbol(\"BNB\");\n        break;\n      }\n      case chain.polygon: {\n        setEtherSymbol(\"MATIC\");\n        break;\n      }\n      case chain.avax: {\n        setEtherSymbol(\"AVAX\");\n        break;\n      }\n      case chain.optimism: {\n        setEtherSymbol(\"ETH\");\n        break;\n      }\n      default: {\n        setEtherSymbol(\"ETH\");\n      }\n    }\n  }, [chainId]);\n\n  React.useEffect(() => {\n    if (account && library) {\n      library?.getBalance(account).then((balance) => {\n        const decimalNumber = new Decimal(formatEther(balance));\n        setBalance(decimalNumber.toFixed(2));\n        setRawBalance(balance);\n      });\n      setProvider(new ethers.providers.Web3Provider(library.provider));\n    } else {\n      setBalance(\"\");\n      setRawBalance(undefined);\n      setProvider(undefined);\n\n      switch (chainId) {\n        case chain.bep: {\n          setProvider(new JsonRpcProvider(config.BSC_RPC_URL, chain.bep));\n          break;\n        }\n        case chain.polygon: {\n          setProvider(\n            new JsonRpcProvider(config.POLYGON_RPC_URL, chain.polygon)\n          );\n          break;\n        }\n        case chain.avax: {\n          setProvider(new JsonRpcProvider(config.AVAX_RPC_URL, chain.avax));\n          break;\n        }\n        case chain.optimism: {\n          setProvider(\n            new JsonRpcProvider(config.OPTIMISM_RPC_URL, chain.optimism)\n          );\n          break;\n        }\n      }\n    }\n  }, [account, chainId, library]);\n\n  const reset = React.useCallback(() => {\n    if (connector && (connector as any).close) {\n      (connector as any).close();\n    }\n    deactivate();\n    setStatus(\"disconnected\");\n    setError(\"\");\n    setName(\"\");\n  }, [connector, deactivate]);\n\n  const connect = React.useCallback(\n    async (connectorName: string, chainId: number) => {\n      try {\n        reset();\n        setStatus(\"connecting\");\n        let connector;\n        switch (connectorName) {\n          case \"bsc\": {\n            // when the app first load, BSC wallet haven't loaded so better wait a bit\n            await wait(500);\n            connector = await bsc(chainId);\n            break;\n          }\n          default:\n            connector = await injected(chainId);\n        }\n        await activate(connector, undefined, true);\n\n        setName(connectorName || \"injected\");\n        setStatus(\"connected\");\n\n        localStorage.setItem(\n          localStorageKey.lastWallet,\n          connectorName || \"injected\"\n        );\n        localStorage.setItem(localStorageKey.lastChainId, chainId.toString());\n      } catch (e) {\n        if (e instanceof UnsupportedChainIdError) {\n          if (chainId !== chain.erc) {\n            const hasSetup = await setupNetwork(chainId);\n            await wait(1000);\n            if (hasSetup && getMetamaskChain() === chainId) {\n              try {\n                setStatus(\"connecting\");\n                await connect(connectorName, chainId);\n                setStatus(\"connected\");\n                setName(\"injected\");\n                setError(undefined);\n                return;\n              } catch (e) {\n                setName(\"\");\n                setError(e);\n                setStatus(\"disconnected\");\n                return;\n              }\n            }\n          } else {\n            toast({\n              description: \"Please change to the correct network\",\n              status: \"error\",\n            });\n          }\n        }\n        setName(\"\");\n        setError(e);\n        setStatus(\"disconnected\");\n      }\n    },\n    [activate, reset, toast]\n  );\n\n  React.useEffect(() => {\n    if (status === \"disconnected\" && prevStatus === \"connected\") {\n      localStorage.removeItem(localStorageKey.lastWallet);\n      localStorage.removeItem(localStorageKey.lastChainId);\n    }\n  }, [status, prevStatus]);\n\n  React.useEffect(() => {\n    let cb: ReturnType<typeof setInterval>;\n\n    if (account && library) {\n      cb = setInterval(() => {\n        library?.getBalance(account).then((balance) => {\n          const decimalNumber = new Decimal(formatEther(balance));\n          setBalance(decimalNumber.toFixed(2));\n          setRawBalance(balance);\n        });\n      }, 10000);\n    } else {\n      setBalance(\"\");\n      setRawBalance(undefined);\n    }\n\n    return () => {\n      if (cb) {\n        clearInterval(cb);\n      }\n    };\n  }, [account, library]);\n\n  React.useEffect(() => {\n    if (providerError instanceof UnsupportedChainIdError) {\n      toast({\n        description: \"Please change to the correct network\",\n        status: \"error\",\n      });\n    }\n  }, [providerError, toast]);\n\n  React.useEffect(() => {\n    const lastWallet = localStorage.getItem(localStorageKey.lastWallet);\n    if (\n      !account &&\n      status === \"disconnected\" &&\n      prevStatus === undefined &&\n      lastWallet\n    ) {\n      try {\n        const lastChainId = parseInt(\n          localStorage.getItem(localStorageKey.lastChainId) || \"\"\n        );\n\n        localStorage.removeItem(localStorageKey.lastWallet);\n\n        connect(lastWallet, lastChainId).catch(() => {\n          localStorage.removeItem(localStorageKey.lastWallet);\n          localStorage.removeItem(localStorageKey.lastChainId);\n        });\n      } catch (e) {\n        localStorage.removeItem(localStorageKey.lastWallet);\n        localStorage.removeItem(localStorageKey.lastChainId);\n      }\n    }\n  }, [connect, account, status, prevStatus, chainId]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        rawBalance,\n        name,\n        account,\n        chainId: chainId || chain.bep,\n        reset,\n        connect,\n        balance,\n        error,\n        status,\n        library,\n        providerError,\n        ether: provider,\n        etherSymbol,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport default WalletProvider;\n","import { useEffect, useRef } from \"react\";\n\nexport default function usePrev<T>(value: T) {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import * as React from \"react\";\n\nfunction Close(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      fill=\"#f1f1f2\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.7 2l6.358 6.243L18.416 2 22 5.584l-6.243 6.358L22 18.301 18.416 22l-6.358-6.36-6.359 6.36L2 18.3l6.358-6.359L2 5.584 5.7 2z\"\n      />\n    </svg>\n  );\n}\n\nexport default Close;\n","import { useToast as useToastCore } from \"@chakra-ui/toast\";\nimport { UseToastOptions } from \"@chakra-ui/toast/dist/types/use-toast\";\nimport React from \"react\";\n\nexport default function useToast(options?: UseToastOptions) {\n  const op: UseToastOptions = React.useMemo(() => {\n    return {\n      position: \"top-right\",\n      ...options,\n    };\n  }, [options]);\n  return useToastCore(op);\n}\n","import React from \"react\";\nimport {\n  Modal as ModalCore,\n  ModalOverlay,\n  ModalContent,\n} from \"@chakra-ui/modal\";\nimport { BoxProps } from \"../Box\";\n\nexport interface ModalProps {\n  children?: React.ReactNode;\n  isOpen?: boolean;\n  onClose?: () => void;\n  modalContentProps?: BoxProps;\n  modalContainerProps?: BoxProps;\n}\n\nfunction Modal(props: ModalProps) {\n  const {\n    children,\n    isOpen = false,\n    onClose,\n    modalContentProps,\n    modalContainerProps,\n  } = props;\n\n  function handleClose() {\n    if (onClose) {\n      onClose();\n    }\n  }\n\n  return (\n    <ModalCore onClose={handleClose} isOpen={isOpen}>\n      <ModalOverlay zIndex=\"1300\" bg=\"rgba(0, 0, 0, 0.75)\" />\n      <ModalContent\n        mt=\"50px\"\n        boxShadow=\"none\"\n        maxWidth=\"480px\"\n        bg=\"transparent\"\n        mx=\"auto\"\n        containerProps={{\n          zIndex: 1700,\n          ...modalContainerProps,\n        }}\n        {...modalContentProps}\n      >\n        {children}\n      </ModalContent>\n    </ModalCore>\n  );\n}\n\nexport default Modal;\n","import { useState, useCallback, useMemo } from \"react\";\n\nconst useToggle = (defaultState = false) => {\n  const [active, setIsActive] = useState(defaultState);\n\n  const setActive = useCallback(() => {\n    setIsActive(true);\n  }, []);\n\n  const setInActive = useCallback(() => {\n    setIsActive(false);\n  }, []);\n\n  const toggle = useCallback(\n    (state?: boolean) => {\n      setIsActive(\"boolean\" === typeof state ? state : !active);\n    },\n    [active]\n  );\n\n  const toggleCallback = useCallback(\n    (state?: boolean) => {\n      return () => {\n        setIsActive(\"boolean\" === typeof state ? state : !active);\n      };\n    },\n    [active]\n  );\n\n  return useMemo(() => {\n    return {\n      active,\n      setActive,\n      setInActive,\n      toggle,\n      toggleCallback,\n    };\n  }, [active, setActive, setInActive, toggle, toggleCallback]);\n};\n\nexport default useToggle;\n","import { useCallback, useEffect, useState } from \"react\";\n\nconst VISIBILITY_STATE_SUPPORTED = \"visibilityState\" in document;\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== \"hidden\";\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible());\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible());\n  }, [setFocused]);\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined;\n\n    document.addEventListener(\"visibilitychange\", listener);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", listener);\n    };\n  }, [listener]);\n\n  return focused;\n}\n","import React from \"react\";\nimport Box from \"../Box\";\nimport Modal from \"../Modal\";\nimport Close from \"../../icons/Close\";\nimport { chain, config } from \"../../config\";\n\nexport interface ModalConnectProps {\n  currentChainId?: number;\n  isOpen?: boolean;\n  onClose?: () => void;\n  onConnect?: (t: string, chain: number) => void;\n}\n\nconst networks = [\n  {\n    name: \"Binance Chain\",\n    icon: `${config.PUBLIC_URL}images/icon/bsc-wallet.svg`,\n    chainId: chain.bep,\n  },\n  {\n    name: \"Polygon\",\n    icon: `${config.PUBLIC_URL}images/icon/polygon-white.svg`,\n    chainId: chain.polygon,\n  },\n  {\n    name: \"Avalanche\",\n    icon: `${config.PUBLIC_URL}images/icon/avax.svg`,\n    chainId: chain.avax,\n  },\n  {\n    name: \"Optimism Goerli\",\n    icon: `${config.PUBLIC_URL}images/icon/optimism.svg`,\n    chainId: chain.ogoerli,\n  },\n  {\n    name: \"Optimism\",\n    icon: `${config.PUBLIC_URL}images/icon/optimism.svg`,\n    chainId: chain.optimism,\n  },\n];\n\nconst wallets = {\n  [chain.avax]: [\n    {\n      name: \"Metamask\",\n      icon: `${config.PUBLIC_URL}images/icon/metamask-fox.svg`,\n      connector: \"injected\",\n    },\n  ],\n  [chain.ogoerli]: [\n    {\n      name: \"Metamask\",\n      icon: `${config.PUBLIC_URL}images/icon/metamask-fox.svg`,\n      connector: \"injected\",\n    },\n  ],\n  [chain.optimism]: [\n    {\n      name: \"Metamask\",\n      icon: `${config.PUBLIC_URL}images/icon/metamask-fox.svg`,\n      connector: \"injected\",\n    },\n  ],\n  [chain.polygon]: [\n    {\n      name: \"Metamask\",\n      icon: `${config.PUBLIC_URL}images/icon/metamask-fox.svg`,\n      connector: \"injected\",\n    },\n  ],\n  [chain.bep]: [\n    {\n      name: \"Metamask\",\n      icon: `${config.PUBLIC_URL}images/icon/metamask-fox.svg`,\n      connector: \"injected\",\n    },\n    {\n      name: \"Binance Chain Wallet\",\n      icon: `${config.PUBLIC_URL}images/icon/bsc-wallet.svg`,\n      connector: \"bsc\",\n    },\n    {\n      name: \"Wallet Connect\",\n      icon: `${config.PUBLIC_URL}images/icon/wallet-connect.png`,\n      connector: \"walletconnect\",\n    },\n  ],\n};\n\nfunction ModalConnect(props: ModalConnectProps) {\n  const { isOpen, onClose, onConnect, currentChainId = chain.bep } = props;\n\n  const [selectedChainId, setSelectChainId] = React.useState(currentChainId);\n\n  function handleConnect(connector: string, chain: number) {\n    return () => {\n      if (onConnect) {\n        onConnect(connector, chain);\n      }\n    };\n  }\n\n  function handleSelectChain(chain: number) {\n    return () => {\n      if (onConnect) {\n        setSelectChainId(chain);\n      }\n    };\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      modalContentProps={{\n        maxWidth: \"700px\",\n      }}\n    >\n      <Box\n        borderTopLeftRadius=\"24px\"\n        borderTopRightRadius=\"24px\"\n        px=\"30px\"\n        position=\"relative\"\n        as=\"header\"\n        bg=\"#a6a6a695\"\n        minHeight=\"70px\"\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <Box\n          fontSize=\"24px\"\n          lineHeight=\"28px\"\n          color=\"primary\"\n          as=\"h2\"\n          fontWeight={700}\n        >\n          Connect your wallet\n        </Box>\n        <Box\n          onClick={onClose}\n          ml=\"auto\"\n          as=\"button\"\n          color=\"#22222280\"\n          fontSize=\"20px\"\n        >\n          <Close />\n        </Box>\n      </Box>\n      <Box\n        bg=\"#a6a6a695\"\n        borderBottomRightRadius=\"24px\"\n        borderBottomLeftRadius=\"24px\"\n      >\n        <Box as=\"section\">\n          <Box\n            mt=\"10px\"\n            color=\"primary\"\n            as=\"h3\"\n            fontWeight=\"bold\"\n            fontSize=\"20px\"\n            textAlign=\"center\"\n          >\n            Select network\n          </Box>\n          <Box\n            mt=\"16px\"\n            display={{ xl: \"flex\", base: \"flex\" }}\n            flexWrap=\"wrap\"\n            justifyContent=\"center\"\n          >\n            {networks.map((w) => {\n              return (\n                <Box\n                  width={{\n                    base: \"50%\",\n                    xl: \"25%\",\n                  }}\n                  key={w.name}\n                  color=\"#9CAFF1\"\n                >\n                  <Box\n                    border={w.chainId === selectedChainId ? \"1px solid\" : \"\"}\n                    py=\"20px\"\n                    px=\"30px\"\n                    width=\"100%\"\n                    outline=\"none\"\n                    textAlign=\"center\"\n                    as=\"button\"\n                    fontSize=\"16px\"\n                    fontWeight={700}\n                    onClick={handleSelectChain(w.chainId)}\n                  >\n                    <Box\n                      mx=\"auto\"\n                      as=\"img\"\n                      alt={`${w.name} icon`}\n                      src={w.icon}\n                      w=\"60px\"\n                      h=\"60px\"\n                    />\n                    <Box mt=\"8px\" as=\"span\" display=\"block\">\n                      {w.name}\n                    </Box>\n                  </Box>\n                </Box>\n              );\n            })}\n          </Box>\n        </Box>\n        <Box as=\"section\" mt=\"24px\">\n          <Box\n            mt=\"10px\"\n            color=\"primary\"\n            as=\"h3\"\n            fontWeight=\"bold\"\n            fontSize=\"20px\"\n            textAlign=\"center\"\n          >\n            Select wallet\n          </Box>\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            {wallets[selectedChainId]?.map((w) => {\n              return (\n                <Box\n                  width={{\n                    base: \"50%\",\n                    xl: \"25%\",\n                  }}\n                  py=\"20px\"\n                  px=\"30px\"\n                  as=\"button\"\n                  key={w.name}\n                  color=\"#9CAFF1\"\n                >\n                  <Box\n                    width=\"100%\"\n                    outline=\"none\"\n                    textAlign=\"center\"\n                    fontSize=\"16px\"\n                    fontWeight={700}\n                    onClick={handleConnect(w.connector, selectedChainId)}\n                  >\n                    <Box\n                      mx=\"auto\"\n                      as=\"img\"\n                      alt={`${w.name} icon`}\n                      src={w.icon}\n                      w=\"50px\"\n                      h=\"50px\"\n                    />\n                    <Box mt=\"8px\" as=\"span\" display=\"block\">\n                      {w.name}\n                    </Box>\n                  </Box>\n                </Box>\n              );\n            })}\n          </Box>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default ModalConnect;\n","import React from \"react\";\nimport useToggle from \"../../hooks/useToogle\";\nimport ModalConnect from \"../../components/ModalConnect\";\nimport useWallet from \"../../hooks/useWallet\";\nimport { localStorageKey } from \"../../config\";\n\nexport interface AppContextValue {\n  isOpenConnect?: boolean;\n  toggleOpenConnect: (state?: boolean) => void;\n}\n\nexport const AppContext = React.createContext<AppContextValue>({} as any);\n\nexport default function AppProvider(props: { children?: React.ReactNode }) {\n  const toggleConnect = useToggle(false);\n  const wallet = useWallet();\n  const { children } = props;\n\n  function handleConnect(t: string, chain: number) {\n    wallet.connect(t, chain).then(() => {\n      localStorage.setItem(localStorageKey.lastWallet, t);\n      localStorage.setItem(localStorageKey.lastChainId, chain.toString());\n      toggleConnect.setInActive();\n    });\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        isOpenConnect: toggleConnect.active,\n        toggleOpenConnect: toggleConnect.toggle,\n      }}\n    >\n      {children}\n      <ModalConnect\n        currentChainId={wallet.chainId}\n        onConnect={handleConnect}\n        onClose={toggleConnect.toggle}\n        isOpen={toggleConnect.active}\n      />\n    </AppContext.Provider>\n  );\n}\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        color: \"#f1f1f2\",\n        fontFamily: `Source Code Pro, monospace`,\n        bg: `url(\"https://www.theanimedaily.com/wp-content/uploads/2022/05/Skeleton-Knight-In-Another-World-Episode-8-j.jpg\")`,\n        bgSize: \"cover\",\n        \"& .chakra-alert__desc\": {\n          color: \"#1A202C\",\n        },\n      },\n    },\n  },\n  colors: {\n    primary: \"#222222\",\n    accent: \"#222222\",\n    error: \"#f04f00\",\n  },\n  zIndices: {\n    hide: -1,\n    auto: \"auto\",\n    base: 0,\n    docked: 10,\n    dropdown: 1000,\n    sticky: 1100,\n    banner: 1200,\n    overlay: 1300,\n    modal: 1400,\n    popover: 1500,\n    skipLink: 1600,\n    toast: 1700,\n    tooltip: 1800,\n  },\n});\n\nexport { theme };\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\n\nconst Home = loadable(() => import(\"./pages/Home\"));\n\nfunction MainLayout(props: { children?: React.ReactNode }) {\n  const { children } = props;\n  return <main>{children}</main>;\n}\n\nconst Main = () => {\n  return (\n    <HashRouter>\n      <MainLayout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n        </Switch>\n      </MainLayout>\n    </HashRouter>\n  );\n};\n\nexport default Main;\n","import create from \"zustand\";\n\nexport type AppStore = {\n  blockNumber: { [chainId: number]: number };\n  setBlockNumber: (chainId: number, block: number) => void;\n};\n\nconst useAppStore = create<AppStore>((set) => ({\n  blockNumber: {},\n  setBlockNumber: (chainId: number, block: number) =>\n    set((state) => ({\n      blockNumber: {\n        ...state.blockNumber,\n        [chainId]: block,\n      },\n    })),\n}));\n\nfunction selectBlockNumber(chainId: number): (state: AppStore) => number {\n  return (state: AppStore) => {\n    return state.blockNumber[chainId] ?? 0;\n  };\n}\n\nfunction selectBlockUpdater(state: AppStore) {\n  return state.setBlockNumber;\n}\n\nexport { useAppStore, selectBlockNumber, selectBlockUpdater };\n","import React from \"react\";\n\nfunction useDebounceValue<T>(value: T, delay: number): T {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = React.useState<T>(value);\n\n  React.useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n\nexport default useDebounceValue;\n","import React from \"react\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { CSSReset } from \"@chakra-ui/css-reset\";\nimport { theme } from \"./theme\";\nimport WalletProvider from \"./providers/WalletProvider\";\nimport AppProvider from \"./providers/AppProvider\";\nimport Main from \"./Main\";\nimport { useAutoUpdateBlockNumber } from \"./hooks/app\";\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 10000;\n  return library;\n}\n\nfunction Updater() {\n  useAutoUpdateBlockNumber();\n  return null;\n}\n\nfunction App() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <ChakraProvider theme={theme}>\n        <WalletProvider>\n          <AppProvider>\n            <CSSReset />\n            <Main />\n            <Updater />\n          </AppProvider>\n        </WalletProvider>\n      </ChakraProvider>\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","import useIsWindowVisible from \"../window\";\nimport useWallet from \"../useWallet\";\nimport React from \"react\";\nimport {\n  selectBlockNumber,\n  selectBlockUpdater,\n  useAppStore,\n} from \"../../stores/app\";\nimport useDebounceValue from \"../useDebounceValue\";\n\nexport function useAutoUpdateBlockNumber() {\n  const windowVisible = useIsWindowVisible();\n  const [state, setState] = React.useState<number>(0);\n  const updateBlock = useAppStore(selectBlockUpdater);\n\n  const { ether, chainId } = useWallet();\n\n  const debouncedState = useDebounceValue(state, 100);\n\n  React.useEffect(() => {\n    if (chainId) {\n      updateBlock(chainId, debouncedState);\n    }\n  }, [debouncedState, chainId, updateBlock]);\n\n  React.useEffect(() => {\n    function blockNumberCallback(blockNumber: number) {\n      setState(blockNumber);\n    }\n\n    if (windowVisible && ether) {\n      ether\n        .getBlockNumber()\n        .then(blockNumberCallback)\n        .catch((error) =>\n          // eslint-disable-next-line no-console\n          console.error(\n            `Failed to get block number for chainId: ${chainId}`,\n            error\n          )\n        );\n\n      ether.on(\"block\", blockNumberCallback);\n    }\n    return () => {\n      if (ether) {\n        ether.removeListener(\"block\", blockNumberCallback);\n      }\n    };\n  }, [ether, chainId, windowVisible, updateBlock]);\n}\n\nexport function useBlockNumberCallback(cb: () => void) {\n  const { chainId } = useWallet();\n\n  const block = useAppStore(selectBlockNumber(chainId || 0));\n\n  React.useEffect(() => {\n    cb();\n  }, [block, cb]);\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export * from \"./Box\";\nexport { default } from \"./Box\";\n"],"sourceRoot":""}